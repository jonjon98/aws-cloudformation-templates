---
Resources:
  VPCTest:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsHostnames: false
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
        - Key: Name
          Value: VPCTest
  
  PrivateSubnetTest:
    Type: AWS::EC2::Subnet
    DependsOn: VPCTest ### Don't think this is needed
    Properties:
      # Can only specify either AvailabilityZone or AvailabilityZoneId, NOT both.
      AvailabilityZone: ap-southeast-1a
      # AvailabilityZoneId: apse1-az2

      CidrBlock: 10.0.0.0/28
      # MapPublicIpOnLaunch: true # Indicates whether instances launched in this subnet receive a public IPv4 address. The default value is false.
      Tags: 
        - Key: Name
          Value: PrivateSubnetTest
      VpcId: !GetAtt VPCTest.VpcId

  PublicSubnetTest:
    Type: AWS::EC2::Subnet
    DependsOn: VPCTest ### Don't think this is needed
    Properties:
      AvailabilityZone: ap-southeast-1a
      CidrBlock: 10.0.0.16/28
      Tags: 
        - Key: Name
          Value: PublicSubnetTest
      VpcId: !GetAtt VPCTest.VpcId

# Associate PublicSubnetTest to PublicRouteTableTest
  ConnectSubnetToPublicRouteTableTest:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !GetAtt PublicRouteTableTest.RouteTableId
      SubnetId: !GetAtt PublicSubnetTest.SubnetId

  InternetGatewayTest:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: Name
          Value: InternetGatewayTest

# Attach the InternetGatewayTest to the VPCTest
  VPCGatewayAttachmentTest:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      # Specify either InternetGatewayId or VpnGatewayId but not both
      InternetGatewayId: !GetAtt InternetGatewayTest.InternetGatewayId
      VpcId: !GetAtt VPCTest.VpcId
      # VpnGatewayId: String


  PublicRouteTableTest:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: PublicRouteTableTest
      VpcId: !GetAtt VPCTest.VpcId

# Create a route in PublicRouteTableTest to the InternetGatewayTest
  InternetGatewayRouteTest:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      # DestinationPrefixListId: String
      GatewayId: !GetAtt InternetGatewayTest.InternetGatewayId
      RouteTableId: !GetAtt PublicRouteTableTest.RouteTableId