---
Resources:
### VPC
# Create a VPC resource
  VPCTest:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/24
      EnableDnsHostnames: false
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags: 
        - Key: Name
          Value: VPCTest


### Public Subnet
# Create a Public Subnet resource
  PublicSubnetTest:
    Type: AWS::EC2::Subnet
    DependsOn: VPCTest #### Don't think this is needed
    Properties:
      AvailabilityZone: ap-southeast-1a
      CidrBlock: 10.0.0.0/28 # 10.0.0.0 - 10.0.0.16 (16 IPs)
      MapPublicIpOnLaunch: true # Indicates whether instances launched in this subnet receive a public IPv4 address. The default value is false.
      Tags: 
        - Key: Name
          Value: PublicSubnetTest
      VpcId: !GetAtt VPCTest.VpcId
    
## Create resources in the Public Subnet
# Create a Public Route Table resource
  PublicRouteTableTest:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: PublicRouteTableTest
      VpcId: !GetAtt VPCTest.VpcId

# Create an Internet Gateway resource
  InternetGatewayTest:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: Name
          Value: InternetGatewayTest

# Create a NAT Gateway to allow for outgoing internet traffic
  NATGatewayTest:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt NATGatewayEIPTest.AllocationId
        SubnetId: !Ref PublicSubnetTest

# Create EIP for NAT Gateway
  NATGatewayEIPTest:
    Type: AWS::EC2::EIP
    Properties:
        Domain: VPCTest

## Linking the resources
# Associate PublicSubnetTest to PublicRouteTableTest
  ConnectSubnetToPublicRouteTableTest:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !GetAtt PublicRouteTableTest.RouteTableId
      SubnetId: !GetAtt PublicSubnetTest.SubnetId

# Attach the InternetGatewayTest to the VPCTest
  VPCGatewayAttachmentTest:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      # Specify either InternetGatewayId or VpnGatewayId but not both
      InternetGatewayId: !GetAtt InternetGatewayTest.InternetGatewayId
      VpcId: !GetAtt VPCTest.VpcId

## Create Routes for the Public Route Table
# Create a route in PublicRouteTableTest to the InternetGatewayTest
  InternetGatewayRouteTest:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !GetAtt InternetGatewayTest.InternetGatewayId
      RouteTableId: !GetAtt PublicRouteTableTest.RouteTableId


### Private Subnet
# Create a Private Subnet resource
  PrivateSubnetTest:
    Type: AWS::EC2::Subnet
    DependsOn: VPCTest #### Don't think this is needed
    Properties:
      # Can only specify either AvailabilityZone or AvailabilityZoneId, NOT both.
      AvailabilityZone: ap-southeast-1a
      CidrBlock: 10.0.0.16/28 # 10.0.0.16 - 10.0.0.32 (16 IPs)
      Tags: 
        - Key: Name
          Value: PrivateSubnetTest
      VpcId: !GetAtt VPCTest.VpcId

## Create resources in the Private Subnet
# Create a Private Route Table resource
  PrivateRouteTableTest:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags: 
        - Key: Name
          Value: PrivateRouteTableTest
      VpcId: !GetAtt VPCTest.VpcId

## Linking the resources
# Associate PrivateSubnetTest to PrivateRouteTableTest
  ConnectSubnetToPrivateRouteTableTest:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !GetAtt PrivateRouteTableTest.RouteTableId
      SubnetId: !GetAtt PrivateSubnetTest.SubnetId

## Create Routes for the Private Route Table
# Create a route in PrivateRouteTableTest to the NATGatewayTest
  RouteNATGatewayTest:
    DependsOn: NATGatewayTest
    Type: AWS::EC2::Route
    Properties:
        RouteTableId: !Ref PrivateRouteTableTest
        DestinationCidrBlock: '0.0.0.0/0'
        NatGatewayId: !Ref NATGatewayTest

### Outputs of this stack to be used by the higher level stacks
Outputs:
  VPCTestId:
    Value: !Ref VPCTest
    Description: Id for VPCTest

  PublicSubnetTestId:
    Value: !Ref PublicSubnetTest
    Description: Id for PublicSubnetTest

  PrivateSubnetTestId:
    Value: !Ref PrivateSubnetTest
    Description: Id for PrivateSubnetTest